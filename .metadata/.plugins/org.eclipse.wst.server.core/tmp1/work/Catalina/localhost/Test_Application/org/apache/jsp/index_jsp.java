/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.23
 * Generated at: 2023-03-13 10:11:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Login</title>\r\n");
      out.write("    <style>\r\n");
      out.write("    *{\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("body{\r\n");
      out.write("    width: 100vw;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    background-color: rgba(96, 100, 88, 0.338);\r\n");
      out.write("}\r\n");
      out.write(".login-form\r\n");
      out.write("{\r\n");
      out.write("    width: max-content;\r\n");
      out.write("    height: max-content;\r\n");
      out.write("    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n");
      out.write("    padding: 40px 60px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    border-radius: 3px;\r\n");
      out.write("}\r\n");
      out.write(".login-form .form-tittle\r\n");
      out.write("{\r\n");
      out.write("    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n");
      out.write("    text-transform: uppercase;\r\n");
      out.write("    margin: 10px 0px; \r\n");
      out.write("    font-size: 1.2rem;\r\n");
      out.write("}\r\n");
      out.write(".login-form .form-input\r\n");
      out.write("{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("}\r\n");
      out.write(".login-form .form-input label\r\n");
      out.write("{\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: row;\r\n");
      out.write("    margin: 5px 0px;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    font-size: 1.2rem;\r\n");
      out.write("    font-family: sans-serif;\r\n");
      out.write("}\r\n");
      out.write(".login-form .form-input input\r\n");
      out.write("{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 2rem;\r\n");
      out.write("    font-size: 1.2rem;\r\n");
      out.write("    border: none;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    border-radius: 3px;\r\n");
      out.write("    padding-inline-start: 5px;\r\n");
      out.write("}\r\n");
      out.write(".login-form .form-input #login-btn\r\n");
      out.write("{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    background-color: rgba(0, 34, 255, 0.584);\r\n");
      out.write("    height: 2rem;\r\n");
      out.write("    text-transform: uppercase;\r\n");
      out.write("    font-size: 1.5rem;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("    letter-spacing: 1px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 3px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    margin-top:20px;\r\n");
      out.write("}\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <form action=\"adminlogin.jsp\">\r\n");
      out.write("    <div class=\"login-form\">\r\n");
      out.write("        <div class=\"form-tittle\">\r\n");
      out.write("            <h1>Login Form</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-input\">\r\n");
      out.write("            <label for=\"username\">Email</label>\r\n");
      out.write("            <input type=\"text\" id=\"username\" required name=\"email\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-input\">\r\n");
      out.write("            <label for=\"Password\">Password</label>\r\n");
      out.write("            <input type=\"password\" id=\"Password\" required name=\"password\">\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"form-input\">\r\n");
      out.write("            <button id=\"login-btn\">Login</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("   </form>\r\n");
      out.write("    <script src=\"/Test_Application/login.js\">\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
